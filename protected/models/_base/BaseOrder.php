<?php

/**
 * This is the model base class for the table "{{Order}}".
 * DO NOT MODIFY THIS FILE! It is automatically generated by giix.
 * If any changes are necessary, you must set or override the required
 * property or method in class "Order".
 *
 * Columns in table "{{Order}}" available as properties of the model,
 * followed by relations of table "{{Order}}" available as properties of the model.
 *
 * @property integer $id
 * @property integer $srcID
 * @property integer $dstID
 * @property integer $orderStatusID
 * @property integer $userID
 * @property integer $deliveryAddressID
 * @property integer $invoiceAddressID
 * @property string $orderReference
 * @property string $purchaseOrder
 * @property integer $quantity
 * @property string $required
 * @property string $created
 *
 * @property Address $invoiceAddress
 * @property Address $src
 * @property Address $dst
 * @property OrderStatus $orderStatus
 * @property User $user
 * @property Address $deliveryAddress
 * @property OrderItem[] $orderItems
 */
abstract class BaseOrder extends GxActiveRecord {

	public static function model($className=__CLASS__) {
		return parent::model($className);
	}

	public function tableName() {
		return '{{Order}}';
	}

	public static function label($n = 1) {
		return Yii::t('app', 'Order|Orders', $n);
	}

	public static function representingColumn() {
		return 'orderReference';
	}

	public function rules() {
		return array(
			array('srcID, dstID, orderStatusID, userID, deliveryAddressID, invoiceAddressID, quantity', 'numerical', 'integerOnly'=>true),
			array('orderReference, purchaseOrder', 'length', 'max'=>40),
			array('required, created', 'safe'),
			array('srcID, dstID, orderStatusID, userID, deliveryAddressID, invoiceAddressID, orderReference, purchaseOrder, quantity, required, created', 'default', 'setOnEmpty' => true, 'value' => null),
			array('id, srcID, dstID, orderStatusID, userID, deliveryAddressID, invoiceAddressID, orderReference, purchaseOrder, quantity, required, created', 'safe', 'on'=>'search'),
		);
	}

	public function relations() {
		return array(
			'invoiceAddress' => array(self::BELONGS_TO, 'Address', 'invoiceAddressID'),
			'src' => array(self::BELONGS_TO, 'Address', 'srcID'),
			'dst' => array(self::BELONGS_TO, 'Address', 'dstID'),
			'orderStatus' => array(self::BELONGS_TO, 'OrderStatus', 'orderStatusID'),
			'user' => array(self::BELONGS_TO, 'User', 'userID'),
			'deliveryAddress' => array(self::BELONGS_TO, 'Address', 'deliveryAddressID'),
			'orderItems' => array(self::HAS_MANY, 'OrderItem', 'orderID'),
		);
	}

	public function pivotModels() {
		return array(
		);
	}

	public function attributeLabels() {
		return array(
			'id' => Yii::t('app', 'ID'),
			'srcID' => null,
			'dstID' => null,
			'orderStatusID' => null,
			'userID' => null,
			'deliveryAddressID' => null,
			'invoiceAddressID' => null,
			'orderReference' => Yii::t('app', 'Order Reference'),
			'purchaseOrder' => Yii::t('app', 'Purchase Order'),
			'quantity' => Yii::t('app', 'Quantity'),
			'required' => Yii::t('app', 'Required'),
			'created' => Yii::t('app', 'Created'),
			'invoiceAddress' => null,
			'src' => null,
			'dst' => null,
			'orderStatus' => null,
			'user' => null,
			'deliveryAddress' => null,
			'orderItems' => null,
		);
	}

	public function search() {
		$criteria = new CDbCriteria;

		$criteria->compare('id', $this->id);
		$criteria->compare('srcID', $this->srcID);
		$criteria->compare('dstID', $this->dstID);
		$criteria->compare('orderStatusID', $this->orderStatusID);
		$criteria->compare('userID', $this->userID);
		$criteria->compare('deliveryAddressID', $this->deliveryAddressID);
		$criteria->compare('invoiceAddressID', $this->invoiceAddressID);
		$criteria->compare('orderReference', $this->orderReference, true);
		$criteria->compare('purchaseOrder', $this->purchaseOrder, true);
		$criteria->compare('quantity', $this->quantity);
		$criteria->compare('required', $this->required, true);
		$criteria->compare('created', $this->created, true);

		return new CActiveDataProvider($this, array(
			'criteria' => $criteria,
		));
	}
}