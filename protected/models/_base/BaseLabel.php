<?php

/**
 * This is the model base class for the table "{{Label}}".
 * DO NOT MODIFY THIS FILE! It is automatically generated by giix.
 * If any changes are necessary, you must set or override the required
 * property or method in class "Label".
 *
 * Columns in table "{{Label}}" available as properties of the model,
 * followed by relations of table "{{Label}}" available as properties of the model.
 *
 * @property integer $id
 * @property integer $labelTypeID
 * @property integer $parentID
 * @property integer $number
 * @property integer $childCount
 * @property string $history
 * @property integer $currentAddressID
 * @property integer $destinationAddressID
 * @property string $requiredDate
 * @property string $dispatchDate
 * @property string $arrivalDate
 *
 * @property Label $parent
 * @property Label[] $labels
 * @property Address $currentAddress
 * @property Address $destinationAddress
 * @property LabelType $labelType
 * @property OrderItem[] $orderItems
 */
abstract class BaseLabel extends GxActiveRecord {

	public static function model($className=__CLASS__) {
		return parent::model($className);
	}

	public function tableName() {
		return '{{Label}}';
	}

	public static function label($n = 1) {
		return Yii::t('app', 'Label|Labels', $n);
	}

	public static function representingColumn() {
		return 'history';
	}

	public function rules() {
		return array(
			array('labelTypeID, parentID, number, childCount, currentAddressID, destinationAddressID', 'numerical', 'integerOnly'=>true),
			array('history, requiredDate, dispatchDate, arrivalDate', 'safe'),
			array('labelTypeID, parentID, number, childCount, history, currentAddressID, destinationAddressID, requiredDate, dispatchDate, arrivalDate', 'default', 'setOnEmpty' => true, 'value' => null),
			array('id, labelTypeID, parentID, number, childCount, history, currentAddressID, destinationAddressID, requiredDate, dispatchDate, arrivalDate', 'safe', 'on'=>'search'),
		);
	}

	public function relations() {
		return array(
			'parent' => array(self::BELONGS_TO, 'Label', 'parentID'),
			'labels' => array(self::HAS_MANY, 'Label', 'parentID'),
			'currentAddress' => array(self::BELONGS_TO, 'Address', 'currentAddressID'),
			'destinationAddress' => array(self::BELONGS_TO, 'Address', 'destinationAddressID'),
			'labelType' => array(self::BELONGS_TO, 'LabelType', 'labelTypeID'),
			'orderItems' => array(self::HAS_MANY, 'OrderItem', 'labelID'),
		);
	}

	public function pivotModels() {
		return array(
		);
	}

	public function attributeLabels() {
		return array(
			'id' => Yii::t('app', 'ID'),
			'labelTypeID' => null,
			'parentID' => null,
			'number' => Yii::t('app', 'Number'),
			'childCount' => Yii::t('app', 'Child Count'),
			'history' => Yii::t('app', 'History'),
			'currentAddressID' => null,
			'destinationAddressID' => null,
			'requiredDate' => Yii::t('app', 'Required Date'),
			'dispatchDate' => Yii::t('app', 'Dispatch Date'),
			'arrivalDate' => Yii::t('app', 'Arrival Date'),
			'parent' => null,
			'labels' => null,
			'currentAddress' => null,
			'destinationAddress' => null,
			'labelType' => null,
			'orderItems' => null,
		);
	}

	public function search() {
		$criteria = new CDbCriteria;

		$criteria->compare('id', $this->id);
		$criteria->compare('labelTypeID', $this->labelTypeID);
		$criteria->compare('parentID', $this->parentID);
		$criteria->compare('number', $this->number);
		$criteria->compare('childCount', $this->childCount);
		$criteria->compare('history', $this->history, true);
		$criteria->compare('currentAddressID', $this->currentAddressID);
		$criteria->compare('destinationAddressID', $this->destinationAddressID);
		$criteria->compare('requiredDate', $this->requiredDate, true);
		$criteria->compare('dispatchDate', $this->dispatchDate, true);
		$criteria->compare('arrivalDate', $this->arrivalDate, true);

		return new CActiveDataProvider($this, array(
			'criteria' => $criteria,
		));
	}
}