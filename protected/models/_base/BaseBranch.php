<?php

/**
 * This is the model base class for the table "{{Branch}}".
 * DO NOT MODIFY THIS FILE! It is automatically generated by giix.
 * If any changes are necessary, you must set or override the required
 * property or method in class "Branch".
 *
 * Columns in table "{{Branch}}" available as properties of the model,
 * followed by relations of table "{{Branch}}" available as properties of the model.
 *
 * @property integer $id
 * @property integer $companyID
 * @property string $name
 * @property string $stockCount
 * @property string $transitCount
 *
 * @property Address[] $addresses
 * @property Api[] $apis
 * @property Company $company
 * @property BranchBranchType[] $branchBranchTypes
 * @property mixed $ulUsers
 */
abstract class BaseBranch extends GxActiveRecord {

	public static function model($className=__CLASS__) {
		return parent::model($className);
	}

	public function tableName() {
		return '{{Branch}}';
	}

	public static function label($n = 1) {
		return Yii::t('app', 'Branch|Branches', $n);
	}

	public static function representingColumn() {
		return 'name';
	}

	public function rules() {
		return array(
			array('companyID', 'numerical', 'integerOnly'=>true),
			array('name', 'length', 'max'=>120),
			array('stockCount, transitCount', 'length', 'max'=>20),
			array('companyID, name, stockCount, transitCount', 'default', 'setOnEmpty' => true, 'value' => null),
			array('id, companyID, name, stockCount, transitCount', 'safe', 'on'=>'search'),
		);
	}

	public function relations() {
		return array(
			'addresses' => array(self::HAS_MANY, 'Address', 'branchID'),
			'apis' => array(self::HAS_MANY, 'Api', 'branchID'),
			'company' => array(self::BELONGS_TO, 'Company', 'companyID'),
			'branchBranchTypes' => array(self::HAS_MANY, 'BranchBranchType', 'branchID'),
			'ulUsers' => array(self::MANY_MANY, 'User', '{{UserBranch}}(branchID, userID)'),
		);
	}

	public function pivotModels() {
		return array(
			'ulUsers' => 'UserBranch',
		);
	}

	public function attributeLabels() {
		return array(
			'id' => Yii::t('app', 'ID'),
			'companyID' => null,
			'name' => Yii::t('app', 'Name'),
			'stockCount' => Yii::t('app', 'Stock Count'),
			'transitCount' => Yii::t('app', 'Transit Count'),
			'addresses' => null,
			'apis' => null,
			'company' => null,
			'branchBranchTypes' => null,
			'ulUsers' => null,
		);
	}

	public function search() {
		$criteria = new CDbCriteria;

		$criteria->compare('id', $this->id);
		$criteria->compare('companyID', $this->companyID);
		$criteria->compare('name', $this->name, true);
		$criteria->compare('stockCount', $this->stockCount, true);
		$criteria->compare('transitCount', $this->transitCount, true);

		return new CActiveDataProvider($this, array(
			'criteria' => $criteria,
		));
	}
}