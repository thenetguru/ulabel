<?php

/**
 * This is the model base class for the table "{{Support}}".
 * DO NOT MODIFY THIS FILE! It is automatically generated by giix.
 * If any changes are necessary, you must set or override the required
 * property or method in class "Support".
 *
 * Columns in table "{{Support}}" available as properties of the model,
 * followed by relations of table "{{Support}}" available as properties of the model.
 *
 * @property integer $id
 * @property integer $supportTypeID
 * @property integer $supportPriorityID
 * @property string $subject
 * @property string $created
 *
 * @property SupportPriority $supportPriority
 * @property SupportType $supportType
 * @property SupportMessage[] $supportMessages
 */
abstract class BaseSupport extends GxActiveRecord {

	public static function model($className=__CLASS__) {
		return parent::model($className);
	}

	public function tableName() {
		return '{{Support}}';
	}

	public static function label($n = 1) {
		return Yii::t('app', 'Support|Supports', $n);
	}

	public static function representingColumn() {
		return 'subject';
	}

	public function rules() {
		return array(
			array('supportTypeID, supportPriorityID', 'numerical', 'integerOnly'=>true),
			array('subject', 'length', 'max'=>40),
			array('created', 'safe'),
			array('supportTypeID, supportPriorityID, subject, created', 'default', 'setOnEmpty' => true, 'value' => null),
			array('id, supportTypeID, supportPriorityID, subject, created', 'safe', 'on'=>'search'),
		);
	}

	public function relations() {
		return array(
			'supportPriority' => array(self::BELONGS_TO, 'SupportPriority', 'supportPriorityID'),
			'supportType' => array(self::BELONGS_TO, 'SupportType', 'supportTypeID'),
			'supportMessages' => array(self::HAS_MANY, 'SupportMessage', 'supportID'),
		);
	}

	public function pivotModels() {
		return array(
		);
	}

	public function attributeLabels() {
		return array(
			'id' => Yii::t('app', 'ID'),
			'supportTypeID' => null,
			'supportPriorityID' => null,
			'subject' => Yii::t('app', 'Subject'),
			'created' => Yii::t('app', 'Created'),
			'supportPriority' => null,
			'supportType' => null,
			'supportMessages' => null,
		);
	}

	public function search() {
		$criteria = new CDbCriteria;

		$criteria->compare('id', $this->id);
		$criteria->compare('supportTypeID', $this->supportTypeID);
		$criteria->compare('supportPriorityID', $this->supportPriorityID);
		$criteria->compare('subject', $this->subject, true);
		$criteria->compare('created', $this->created, true);

		return new CActiveDataProvider($this, array(
			'criteria' => $criteria,
		));
	}
}